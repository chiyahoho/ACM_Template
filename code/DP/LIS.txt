最长上升子序列

【朴素】
f[i]=max{f[j]}+1(j<i且a[j]<a[i])

【优化】
g[i]=min{a[j]}(f[j]=i)
即g[i]表示长度为i的上升子序列最后一个数最小是多少。
则g[1]<g[2]<...<g[k]

做到f[i]时，在g中找到>=a[i]的第一个g[j]，则f[i]:=j;   //为什么？tip1
由于g[j]>=a[i],所以g[j]:=a[i]

tip1:
因为g[j]第一个>=a[i]，所以g[j-1]<a[i],又g[1]<g[2]<...<g[k]，所以:f[i]:=f[g[j-1]]+1=j-1+1=j.寻找的过程可以二分查找，所以效率是nlogn

注意：f[i]表示的是a[i]一定要取的LIS，最后的ans=max{f[i]}(1<=i<=n)

若是最长不下降子序列二分查找的时候就找第一个>a[i]的g。

代码：
  for i:=1 to n do g[i]:=maxlongint;
  f[1]:=1; g[1]:=a[1]; g[0]:=0;
  for i:=2 to n do begin
        l:=0; r:=n;
        while l<=r do begin
                m:=(l+r)>>1;
                if a[i]>g[m] then l:=m+1
                else begin
                        k:=m;
                        r:=m-1;
                end;
        end;
        f[i]:=k; g[k]:=a[i];
  end;
  for i:=2 to n do if f[i-1]>f[i] then f[i]:=f[i-1];
  writeln(f[n]);

推荐：poj1836