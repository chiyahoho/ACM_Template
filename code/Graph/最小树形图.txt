可以认为是最小生成树的有向边版本。

有固定根的最小树形图求法O(VE)：
消除自环，显然自环不在最小树形图中。
判定是否存在最小树形图，以根为起点DFS一遍即可。

cost为最小树形图总权值。A为最短弧集合(有向)

对所有除源点外的节点v，找到一条以v为终点的边e，e是v的所有入边中最小的边。(记pre[v]为e的起点，minl[v]为e的权值。此时e就在A中了。)
若A中有环就把环缩成一个点，重新构造A。无则inc(cost,A的权值和)，输出cost。
缩点和A的构造：
假设环中的点为集合vi，缩成点v。对所有不在环上的点u：
dist[u,v]=min{ dist[u,vi]-minl[vi] }
dist[v,u]=min{ dist[vi,u]          }
pre[u]=v  (if pre[u]=vi)
另外inc(cost,minl[vi])

找环O(V)，收缩O(E)，总复杂度O(VE)。


对于不固定根的最小树形图，新加一个点，和每个点连权相同的边，这个权大于原图所有边权的和，这样这个图固定跟的最小树形图和原图不固定跟的最小树形图就是对应的了。

裸题：PKU3164

补充构造A的正确性：
出边不变，入边的权要减去minl[vi]?
对于新图中的最小树形图T，设指向v的边为e。将v展开以后，e指向了一个环。假设原先e是指向v1的，这个时候我们将环上指向v1的边minl[v1]删除，这样就得到了原图中的一个树形图。我们会发现，如果新图中e的权w'(e)是原图中e的权w(e)减去minl[v1]权的话，那么在我们删除掉minl[v1]，并且将e恢复为原图状态的时候，这个树形图的权仍然是新图树形图的权加环的权，而这个权值正是最小树形图的权值。所以在展开节点之后，我们得到的仍然是最小树形图。逐步展开所有的人工节点，就会得到初始图的最小树形图了。