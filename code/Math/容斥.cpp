给出N个整数A1，A2，⋯⋯，AN，统计满足i<j且Ai和Aj互质的二元组(i，j)的数量。
【【题解】】：
把每个数分解质因数，比如分解后有2,3,5，那么给记录有2的+1，有3的+1，有5的+1，有2又有3的+1⋯⋯
一个处理就是w就是记录这个的数组。那么很显然2记在w[2]里，3记在w[3]里，又有2又有3的就可以记在w[2*3]，就是w[6]里。这样一一对应了。
现在假如加入a[i]=3*5*7(省略了多次幂，比如(3^2)*(5^4)*(7^3)也当做3*5*7处理)，那么i之前的数中不与a[i]互质的数就有w[3]+w[5]+w[7]-w[15]-w[21]-w[35]+w[105]个，就是上面的容斥了。
做法是枚举长度为3的二进制，100表示3,010表示5,001表示7,101表示21⋯⋯然后再计算这个二进制中有多少1，odd一下判断是+还是-就好了。
int main(){
    shai(1000000);
    g[0]=1; rep(i,1,30) g[i]=g[i-1]*2;
    cin>>n;
    rep(i,1,n){
        cin>>x;
        ans+=i-1;
        now.clear();
        for(;x>1;x/=f[x]) if (now[now.size()-1]!=f[x]) now.push_back(f[x]);
        rep(opt,1,g[now.size()]-1){
            num=1; cnt=k=0;
            for(x=opt;x;x>>=1,k++)if (x&1){
                num*=now[k];
                cnt++;
            }
            if (cnt&1) ans-=w[num]++;
            else ans+=w[num]++;
        }
    }
    cout<<ans<<endl;
}